name: Build and Deploy to PYPI

on:
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/setup-python@v5.1.1
      with:
        python-version: ${{ matrix.python-version }}

    - run: pip install -r requirements.txt
    
    - name: Configure CMake
      run: cmake -DPYBIND11_PYTHON_VERSION="${{ matrix.python-version }}" -S . -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

    - name: Install package 'build'
      run: python -m pip install build

    - name: Build Wheel
      run: python -m build -w ./PythonBuild

    - name: Install Twine
      run: python -m pip install twine

    - name: Publish on PyPI
      run: python -m twine upload --repository-url https://test.pypi.org/legacy/ -u __token__ -p ${{ secrets.PYPI_REPO_TOKEN }} PythonBuild/dist/* --verbose --disable-progress-bar

  build-manylinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['cp37-cp37m', 'cp38-cp38', 'cp39-cp39', 'cp310-cp310', 'cp311-cp311', 'cp312-cp312']
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
  
    - name: Build manylinux wheel
      run: |
        docker run --rm -v $(pwd):/io quay.io/pypa/manylinux_2_28_x86_64 /bin/bash -c "
        set -e
        cd /io
        
        yum install -y epel-release kernel-headers wayland-devel libxkbcommon-devel \
          wayland-protocols-devel mesa-libGL-devel mesa-libEGL-devel libXcursor-devel \
          libXi-devel libXinerama-devel libXrandr-devel libXrender-devel libXext-devel \
          libXfixes-devel libXt-devel libXtst-devel libX11-devel libXdamage-devel \
          libXcomposite-devel libwayland-client libevdev-devel kernel-devel libXrandr-devel \
          && yum clean all
        
        export PYTHON_ROOT=/opt/python/${{ matrix.python-version }}
        export PATH=\$PYTHON_ROOT/bin:\$PATH
        export PYTHON_EXECUTABLE=\$PYTHON_ROOT/bin/python
        
        \$PYTHON_EXECUTABLE -m pip install --upgrade pip -r requirements.txt cmake build auditwheel
        
        \$PYTHON_EXECUTABLE -m cmake \
          -DPython3_ROOT_DIR=\$PYTHON_ROOT \
          -DPython3_EXECUTABLE=\$PYTHON_EXECUTABLE \
          -DPython_FIND_STRATEGY=LOCATION \
          -DPython_FIND_REGISTRY=NEVER \
          -DPython_FIND_FRAMEWORK=NEVER \
          -DPYBIND11_PYTHON_VERSION=${{ matrix.python-version }} \
          -DCMAKE_C_FLAGS=\"-D_POSIX_C_SOURCE=200809L -Wno-deprecated-declarations\" \
          -DCMAKE_CXX_FLAGS=\"-D_POSIX_C_SOURCE=200809L -Wno-deprecated-declarations\" \
          -S . -B build -DCMAKE_BUILD_TYPE=Release
        
        \$PYTHON_EXECUTABLE -m cmake --build build --config Release
        \$PYTHON_EXECUTABLE -m build -w ./PythonBuild
        for whl in PythonBuild/dist/*.whl; do
          auditwheel repair \"\$whl\" -w ./wheelhouse/
        done
        "
  
    - name: Install Twine
      run: pip install twine
  
    - name: Publish on PyPI
      run: python -m twine upload --repository-url https://test.pypi.org/legacy/ -u __token__ -p ${{ secrets.PYPI_REPO_TOKEN }} wheelhouse/*.whl