name: Build and Deploy to PYPI

on:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  PYTHON_VERSION: "3.11"
  CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/setup-python@v5.1.1
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - uses: actions/setup-python@v5.1.1
      with:
        python-version: "3.12.4"
    - run: pip install -r requirements.txt
    
    - name: Configure CMake
      run: cmake -DPYBIND11_PYTHON_VERSION="${{ env.PYTHON_VERSION }}" -S . -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

    - name: Install package 'build'
      run: py -${{ env.PYTHON_VERSION }} -m pip install build

    - name: Build Wheel
      run: py -${{ env.PYTHON_VERSION }} -m build -w ./PythonBuild

    - name: Install Twine
      run: py -${{ env.PYTHON_VERSION }} -m pip install twine

    - name: Publish on PyPI
      run: py -${{ env.PYTHON_VERSION }} -m twine upload --repository-url https://test.pypi.org/legacy/ -u __token__ -p ${{ secrets.PYPI_REPO_TOKEN }} PythonBuild/dist/* --verbose --disable-progress-bar

  build-manylinux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5.1.1
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install cmake
        pip install build
        pip install cibuildwheel==2.19.2

    - name: Build using cibuildwheel
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_MANYLINUX_X86_64_IMAGE: ${{ env.CIBW_MANYLINUX_X86_64_IMAGE }}
        CIBW_BEFORE_BUILD: |
          yum install -y \
            libwayland-bin \
            libwayland-dev \
            libwayland-egl-backend-dev \
            libxkbcommon-dev \
            libxrandr-dev \
            libxinerama-dev \
            libx11-dev \
            libxcursor-dev \
            libxi-dev \
            libxext-dev \
            libxcomposite-dev \
            libxdamage-dev \
            libxfixes-dev \
            mesa-common-dev
        CIBW_BEFORE_BUILD_LINUX: |
          mkdir -p build && cd build && cmake -DPYBIND11_PYTHON_VERSION=${{ env.PYTHON_VERSION }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} .. && make

    - name: Install Twine
      run: pip install twine

    - name: Publish on PyPI
      run: python -m twine upload --repository-url https://test.pypi.org/legacy/ -u __token__ -p ${{ secrets.PYPI_REPO_TOKEN }} wheelhouse/* --verbose --disable-progress-bar